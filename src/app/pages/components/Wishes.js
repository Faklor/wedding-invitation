'use client'

import './Wishes.scss'
import { useState, useEffect } from 'react'
import gsap from 'gsap'
import { ScrollTrigger } from 'gsap/ScrollTrigger'

gsap.registerPlugin(ScrollTrigger)

export default function Wishes() {
  const wishes = [
    // "–ü—É—Å—Ç—å –≤–∞—à–∞ –ª—é–±–æ–≤—å –±—É–¥–µ—Ç —Ç–∞–∫–æ–π –∂–µ —è—Ä–∫–æ–π –∏ —Ç—ë–ø–ª–æ–π, –∫–∞–∫ –æ–≥–æ–Ω—å –≤ –¥–æ–º–∞—à–Ω–µ–º –æ—á–∞–≥–µ.",
    // "–ñ–µ–ª–∞–µ–º, —á—Ç–æ–±—ã –∫–∞–∂–¥—ã–π –Ω–æ–≤—ã–π –¥–µ–Ω—å –≤–º–µ—Å—Ç–µ –ø—Ä–∏–Ω–æ—Å–∏–ª —Ä–∞–¥–æ—Å—Ç—å –∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ.",
    // "–ü—É—Å—Ç—å –≤–∞—à–∏ —Å–µ—Ä–¥—Ü–∞ –≤—Å–µ–≥–¥–∞ –±—å—é—Ç—Å—è –≤ —É–Ω–∏—Å–æ–Ω, –∞ –¥–æ–º –±—É–¥–µ—Ç –ø–æ–ª–æ–Ω —Å–º–µ—Ö–∞ –∏ —É—é—Ç–∞.",
    // "–ñ–µ–ª–∞–µ–º –¥–æ–ª–≥–∏—Ö –ª–µ—Ç —Å—á–∞—Å—Ç—å—è, –≤–∑–∞–∏–º–æ–ø–æ–Ω–∏–º–∞–Ω–∏—è –∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö —É–ª—ã–±–æ–∫."
    "–ú—ã —Å —Ç–µ–ø–ª–æ—Ç–æ–π –æ—Ç–Ω–æ—Å–∏–º—Å—è –∫ –¥–µ—Ç—è–º –ª—é–±–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞. –ù–æ –¥–ª—è —Å–≤–∞–¥—å–±—ã –≤—ã–±—Ä–∞–ª–∏ —Ñ–æ—Ä–º–∞—Ç 18+."
  ]

  const [current, setCurrent] = useState(0)

  const nextWish = () => {
    animateChange(() => setCurrent((prev) => (prev + 1) % wishes.length))
  }

  const prevWish = () => {
    animateChange(() => setCurrent((prev) => (prev - 1 + wishes.length) % wishes.length))
  }

  // üîπ –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
  useEffect(() => {
    const tl = gsap.timeline({
      defaults: { ease: 'power3.out', duration: 0.6 },
      scrollTrigger: {
        trigger: '.wishes',
        start: 'top 80%',
        toggleActions: 'play none none reverse',
      },
    })

    tl.from('.wishesTitle', { opacity: 0, y: -30 })
      .from('.wishesSlider', { opacity: 0, scale: 0.9 }, '-=0.2')

      ScrollTrigger.refresh()

        // return () => {
        // tl.kill()
        // ScrollTrigger.kill()
        // }
  }, [])

  // üîπ –ê–Ω–∏–º–∞—Ü–∏—è —Å–º–µ–Ω—ã –ø–æ–∂–µ–ª–∞–Ω–∏—è
  const animateChange = (callback) => {
    gsap.to('.wishContent p', {
      opacity: 0,
      y: -20,
      duration: 0.3,
      onComplete: () => {
        callback()
        gsap.fromTo(
          '.wishContent p',
          { opacity: 0, y: 20 },
          { opacity: 1, y: 0, duration: 0.4 }
        )
      },
    })
  }

  return (
    <div className="wishes">
      <h2 className="wishesTitle">–ü–æ–∂–µ–ª–∞–Ω–∏—è</h2>

      <div className="wishesSlider">
        {/* <button className="navBtn" onClick={prevWish}>‚Äπ</button> */}

        <div className="wishContent">
          <p>{wishes[current]}</p>
          {/* <span className="counter">
            {current + 1} / {wishes.length}
          </span> */}
        </div>

        {/* <button className="navBtn" onClick={nextWish}>‚Ä∫</button> */}
      </div>
    </div>
  )
}
